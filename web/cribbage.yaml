apiVersion: apps/v1
kind: Deployment
metadata:
  name: cribbage-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cribbage
  template:
    metadata:
      labels:
        app: cribbage
    spec:
      containers:
        - name: flask-container
          image: "gcr.io/optimum-pier-280005/cribbage-app:55"
          resources:
            requests:
              cpu: 40m
              memory: 32Mi
            limits:
              cpu: 60m
              memory: 48Mi
          env:
            - name: "REDISHOST"
              value: "localhost"
          ports:
            - name: http
              containerPort: 5000
        - name: redis-container
          image: redis
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: cribbage-service
  labels:
    app: cribbage
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"5000":"cribbage-backendconfig"}}'
spec:
  selector:
    app: cribbage
  ports:
  - port: 5000
    protocol: TCP
    name: cribbage-port
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: cribbage-backendconfig
spec:
  timeoutSec: 7200
  connectionDraining:
    drainingTimeoutSec: 7200
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: cribbage-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
      - cribbage.live
      secretName: cribbage-live-tls
  rules:
  - host: cribbage.live
    http:
      paths:
      - path: /
        backend:
          serviceName: cribbage-service
          servicePort: cribbage-port
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: zach@cribbage.live
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
    - selector: {}
      http01:
        ingress:
          class: nginx